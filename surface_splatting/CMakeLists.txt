# Module
set(SURFACE_SPLATTING_NAME surface_splatting)

# Directories
set(SURFACE_SPLATTING_SOURCE_DIR "${SURFACE_SPLATTING_ROOT}")

# Sources
file(GLOB_RECURSE SURFACE_SPLATTING_SOURCES RELATIVE ${SURFACE_SPLATTING_SOURCE_DIR} *.cpp)
file(GLOB_RECURSE SURFACE_SPLATTING_HEADERS RELATIVE ${SURFACE_SPLATTING_SOURCE_DIR} *.hpp)
file(GLOB_RECURSE SURFACE_SPLATTING_SHADERS RELATIVE ${SURFACE_SPLATTING_SOURCE_DIR} *.glsl)

# Includes
include_directories(
    ${CMAKE_CURRENT_BINARY_DIR}
    ${GLVIZ_INCLUDE_DIR}
    ${GLVIZ_SOURCE_DIR}
)

# Shaders
set(SURFACE_SPLATTING_RESOURCES "${CMAKE_CURRENT_BINARY_DIR}/surface_splatting_resources.hpp" "${CMAKE_CURRENT_BINARY_DIR}/surface_splatting_resources.cpp")
wrap_resources("${SURFACE_SPLATTING_SHADERS}" ${SURFACE_SPLATTING_NAME} ${SURFACE_SPLATTING_RESOURCES})

# Target
add_library("${SURFACE_SPLATTING_NAME}" STATIC ${SURFACE_SPLATTING_SOURCES} ${SURFACE_SPLATTING_SHADERS} ${SURFACE_SPLATTING_RESOURCES})
target_include_directories("${SURFACE_SPLATTING_NAME}" PUBLIC ${SURFACE_SPLATTING_HEADERS})
set_property(TARGET "${SURFACE_SPLATTING_NAME}" PROPERTY CXX_STANDARD 11)
add_dependencies("${SURFACE_SPLATTING_NAME}" glviz)
target_link_libraries("${SURFACE_SPLATTING_NAME}" glviz)

# Options. cmake -DmyOptionName=ON .
option("${SURFACE_SPLATTING_NAME}_pyModule" "Build a python module for ${SURFACE_SPLATTING_NAME}." OFF)

## ADD PYTHON MODULE COMPILATION CODE
if (${SURFACE_SPLATTING_NAME}_pyModule)
  include(libs-python)
  
  set(SETUP_PY_IN "${CMAKE_CURRENT_SOURCE_DIR}/py_surface_splatting/setup.py.in")
  set(SETUP_PY "${CMAKE_CURRENT_BINARY_DIR}/setup.py")
  
  configure_file(${SETUP_PY_IN} ${SETUP_PY})
  
  include_directories(
    ${SURFACE_SPLATTING_HEADERS}
  )
  file(GLOB SOURCES_PY
    ${SURFACE_SPLATTING_SOURCES}
    ${SURFACE_SPLATTING_SHADERS}
    ${SURFACE_SPLATTING_RESOURCES}
  )
  add_library("${SURFACE_SPLATTING_NAME}Py" SHARED ${SOURCES_PY})
  target_include_directories("${SURFACE_SPLATTING_NAME}Py" PUBLIC ${PYTHON_INCLUDE_DIR} ${SURFACE_SPLATTING_HEADERS})
  foreach(M ${SURFACE_SPLATTING_HEADERS})
    message(WARNING ${M})
  endforeach()
  target_link_libraries("${SURFACE_SPLATTING_NAME}Py" ${SURFACE_SPLATTING_NAME})
  target_link_libraries("${SURFACE_SPLATTING_NAME}Py" ${PYTHON_LIBRARIES})
  target_link_libraries("${SURFACE_SPLATTING_NAME}Py" glviz)
  
  # Rename in pyd.dll
  set_target_properties("${SURFACE_SPLATTING_NAME}Py" PROPERTIES OUTPUT_NAME "${SURFACE_SPLATTING_NAME}.pyd")
  
  PYTHON_LINK(${SURFACE_SPLATTING_NAME})
endif()


# Libraries
EIGEN3_LINK(${SURFACE_SPLATTING_NAME})
GLEW_LINK(${SURFACE_SPLATTING_NAME})
OPENGL_LINK(${SURFACE_SPLATTING_NAME})
SDL2_LINK(${SURFACE_SPLATTING_NAME})
